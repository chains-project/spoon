# Workflow for testing Spoon.
#
# Note that actions are specified by commit hash. This is to avoid the security
# risk of someone injecting malicious code into a release and then simply
# changing a tag.

name: tests
on:
  pull_request:
    branches:
      - master

env:
  JAVA_DISTRIBUTION: temurin

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]

    env:
      MAVEN_OPTS: -Djava.src.version=${{ matrix.java }} -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false

    name: Tests with Java ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - name: Disable Git's autocrlf
        run: git config --global core.autocrlf false
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: actions/setup-java@c3ac5dd0ed8db40fedb61c32fbe677e6b355e94c # v3.8.0
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Get date for cache # see https://github.com/actions/cache README
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Use Maven dependency cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Use silent log config
        run: mv chore/logback.xml src/test/resources/
      - name: Build
        run: |
          mvn -B test-compile
      - name: Fetch final dependencies
        # this is a hack to download the final test dependencies required to actually run the tests
        run: timeout 20 mvn -B test || echo "Done fetching dependencies"
        shell: bash
      - name: Test
        run: 
          mvn test
      - name: print run tests
        run: cat testResults.spoon
